/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/drag_screen/DRAGViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

DRAGViewBase::DRAGViewBase()
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    bxBackGround.setPosition(0, 0, 480, 272);
    bxBackGround.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    bxBackGround.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    bxBackGround.setBorderSize(5);
    add(bxBackGround);

    bxRPMHighRange.setPosition(403, 2, 74, 32);
    bxRPMHighRange.setColor(touchgfx::Color::getColorFromRGB(255, 0, 21));
    add(bxRPMHighRange);

    bxRPMMediumRange.setPosition(214, 2, 189, 32);
    bxRPMMediumRange.setColor(touchgfx::Color::getColorFromRGB(235, 207, 0));
    add(bxRPMMediumRange);

    bxRPMLowRange.setPosition(2, 2, 211, 32);
    bxRPMLowRange.setColor(touchgfx::Color::getColorFromRGB(17, 0, 255));
    add(bxRPMLowRange);

    bxRPMCover.setPosition(2, 2, 475, 32);
    bxRPMCover.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(bxRPMCover);

    bottom_line.setPosition(-3, 266, 483, 18);
    bottom_linePainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    bottom_line.setPainter(bottom_linePainter);
    bottom_line.setStart(0, 5);
    bottom_line.setEnd(480, 5);
    bottom_line.setLineWidth(2);
    bottom_line.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(bottom_line);

    left_line.setPosition(-3, -1, 33, 272);
    left_linePainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    left_line.setPainter(left_linePainter);
    left_line.setStart(4, 0);
    left_line.setEnd(4, 272);
    left_line.setLineWidth(2);
    left_line.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(left_line);

    right_line.setPosition(473, 0, 15, 272);
    right_linePainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    right_line.setPainter(right_linePainter);
    right_line.setStart(5, 0);
    right_line.setEnd(5, 272);
    right_line.setLineWidth(2);
    right_line.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(right_line);

    rpm_line.setPosition(-3, 30, 484, 19);
    rpm_linePainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    rpm_line.setPainter(rpm_linePainter);
    rpm_line.setStart(0, 5);
    rpm_line.setEnd(480, 5);
    rpm_line.setLineWidth(2);
    rpm_line.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(rpm_line);

    up_line.setPosition(-3, -4, 484, 19);
    up_linePainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    up_line.setPainter(up_linePainter);
    up_line.setStart(0, 5);
    up_line.setEnd(480, 5);
    up_line.setLineWidth(2);
    up_line.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(up_line);

    image2.setXY(140, 223);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_RECTANGLE_3_ID));
    add(image2);

    txtRPM.setXY(193, 38);
    txtRPM.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtRPM.setLinespacing(0);
    Unicode::snprintf(txtRPMBuffer, TXTRPM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JIT5).getText());
    txtRPM.setWildcard(txtRPMBuffer);
    txtRPM.resizeToCurrentText();
    txtRPM.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RK7E));
    add(txtRPM);

    txtGear.setXY(187, 44);
    txtGear.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtGear.setLinespacing(0);
    Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_BYV7).getText());
    txtGear.setWildcard(txtGearBuffer);
    txtGear.resizeToCurrentText();
    txtGear.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZSZF));
    add(txtGear);

    txtSpeed.setXY(298, 229);
    txtSpeed.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtSpeed.setLinespacing(0);
    Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OQB0).getText());
    txtSpeed.setWildcard(txtSpeedBuffer);
    txtSpeed.resizeToCurrentText();
    txtSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8FN7));
    add(txtSpeed);

    image1.setXY(13, 49);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_RECTANGLE_2_ID));
    add(image1);

    image1_1.setXY(346, 49);
    image1_1.setBitmap(touchgfx::Bitmap(BITMAP_RECTANGLE_2_ID));
    add(image1_1);

    image1_1_1.setXY(13, 110);
    image1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_RECTANGLE_2_ID));
    add(image1_1_1);

    image1_1_1_2.setXY(13, 170);
    image1_1_1_2.setBitmap(touchgfx::Bitmap(BITMAP_RECTANGLE_2_ID));
    add(image1_1_1_2);

    image1_1_1_1.setXY(346, 110);
    image1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_RECTANGLE_2_ID));
    add(image1_1_1_1);

    image1_1_1_1_1.setXY(346, 170);
    image1_1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_RECTANGLE_2_ID));
    add(image1_1_1_1_1);

    nameOilP.setXY(48, 110);
    nameOilP.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    nameOilP.setLinespacing(0);
    nameOilP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PE3R));
    add(nameOilP);

    txtWaterT.setXY(388, 73);
    txtWaterT.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtWaterT.setLinespacing(0);
    Unicode::snprintf(txtWaterTBuffer, TXTWATERT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ILJW).getText());
    txtWaterT.setWildcard(txtWaterTBuffer);
    txtWaterT.resizeToCurrentText();
    txtWaterT.setTypedText(touchgfx::TypedText(T___SINGLEUSE_672K));
    add(txtWaterT);

    txtOilT.setXY(55, 73);
    txtOilT.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtOilT.setLinespacing(0);
    Unicode::snprintf(txtOilTBuffer, TXTOILT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1QBY).getText());
    txtOilT.setWildcard(txtOilTBuffer);
    txtOilT.resizeToCurrentText();
    txtOilT.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZC7O));
    add(txtOilT);

    nameOilT.setXY(48, 49);
    nameOilT.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    nameOilT.setLinespacing(0);
    nameOilT.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2VO5));
    add(nameOilT);

    nameWaterT.setXY(374, 49);
    nameWaterT.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    nameWaterT.setLinespacing(0);
    nameWaterT.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KCZ1));
    add(nameWaterT);

    txtOilP.setXY(55, 133);
    txtOilP.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtOilP.setLinespacing(0);
    Unicode::snprintf(txtOilPBuffer, TXTOILP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DGVY).getText());
    txtOilP.setWildcard(txtOilPBuffer);
    txtOilP.resizeToCurrentText();
    txtOilP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0BM4));
    add(txtOilP);

    nameSpeed.setXY(245, 232);
    nameSpeed.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    nameSpeed.setLinespacing(0);
    nameSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E7D2));
    add(nameSpeed);

    nameTraction.setXY(384, 110);
    nameTraction.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    nameTraction.setLinespacing(0);
    nameTraction.setTypedText(touchgfx::TypedText(T___SINGLEUSE_27BV));
    add(nameTraction);

    txtTraction.setXY(382, 133);
    txtTraction.setColor(touchgfx::Color::getColorFromRGB(77, 255, 0));
    txtTraction.setLinespacing(0);
    Unicode::snprintf(txtTractionBuffer, TXTTRACTION_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3DMY).getText());
    txtTraction.setWildcard(txtTractionBuffer);
    txtTraction.resizeToCurrentText();
    txtTraction.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KOE8));
    add(txtTraction);

    nameTps.setXY(52, 170);
    nameTps.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    nameTps.setLinespacing(0);
    nameTps.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X3V8));
    add(nameTps);

    nameMap.setXY(383, 170);
    nameMap.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    nameMap.setLinespacing(0);
    nameMap.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TW9D));
    add(nameMap);

    nameVbat.setXY(150, 232);
    nameVbat.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    nameVbat.setLinespacing(0);
    nameVbat.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4QT0));
    add(nameVbat);

    txtVbat.setXY(198, 229);
    txtVbat.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtVbat.setLinespacing(0);
    Unicode::snprintf(txtVbatBuffer, TXTVBAT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TBHQ).getText());
    txtVbat.setWildcard(txtVbatBuffer);
    txtVbat.resizeToCurrentText();
    txtVbat.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A2CN));
    add(txtVbat);

    txtMap.setXY(373, 194);
    txtMap.setColor(touchgfx::Color::getColorFromRGB(77, 255, 0));
    txtMap.setLinespacing(0);
    Unicode::snprintf(txtMapBuffer, TXTMAP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0SHM).getText());
    txtMap.setWildcard(txtMapBuffer);
    txtMap.resizeToCurrentText();
    txtMap.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RPCM));
    add(txtMap);

    txtTps.setXY(55, 194);
    txtTps.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtTps.setLinespacing(0);
    Unicode::snprintf(txtTpsBuffer, TXTTPS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LN7A).getText());
    txtTps.setWildcard(txtTpsBuffer);
    txtTps.resizeToCurrentText();
    txtTps.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4ECE));
    add(txtTps);

    ctTemp.setPosition(0, 0, 480, 272);
    ctTemp.setVisible(false);
    bxOilTemp.setPosition(0, 0, 240, 272);
    bxOilTemp.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    bxOilTemp.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    bxOilTemp.setBorderSize(2);
    ctTemp.add(bxOilTemp);

    bxWaterTemp.setPosition(240, 0, 240, 272);
    bxWaterTemp.setColor(touchgfx::Color::getColorFromRGB(51, 78, 255));
    bxWaterTemp.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    bxWaterTemp.setBorderSize(2);
    ctTemp.add(bxWaterTemp);

    txtWaterTemp.setXY(55, 136);
    txtWaterTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    txtWaterTemp.setLinespacing(0);
    Unicode::snprintf(txtWaterTempBuffer, TXTWATERTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9CXB).getText());
    txtWaterTemp.setWildcard(txtWaterTempBuffer);
    txtWaterTemp.resizeToCurrentText();
    txtWaterTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GN4I));
    ctTemp.add(txtWaterTemp);

    txtOilTemp.setXY(295, 136);
    txtOilTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    txtOilTemp.setLinespacing(0);
    Unicode::snprintf(txtOilTempBuffer, TXTOILTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_U8IW).getText());
    txtOilTemp.setWildcard(txtOilTempBuffer);
    txtOilTemp.resizeToCurrentText();
    txtOilTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T450));
    ctTemp.add(txtOilTemp);

    nameWaterTemp.setXY(265, 19);
    nameWaterTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    nameWaterTemp.setLinespacing(0);
    nameWaterTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IMIO));
    ctTemp.add(nameWaterTemp);

    nameOilTemp.setXY(38, 20);
    nameOilTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    nameOilTemp.setLinespacing(0);
    nameOilTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6K87));
    ctTemp.add(nameOilTemp);

    add(ctTemp);

    ctAlarm.setPosition(0, 0, 480, 272);
    ctAlarm.setVisible(false);
    bxAlarm.setPosition(0, 0, 480, 272);
    bxAlarm.setColor(touchgfx::Color::getColorFromRGB(3, 32, 255));
    bxAlarm.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    bxAlarm.setBorderSize(4);
    ctAlarm.add(bxAlarm);

    txtAlarmName.setXY(153, 15);
    txtAlarmName.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    txtAlarmName.setLinespacing(0);
    Unicode::snprintf(txtAlarmNameBuffer, TXTALARMNAME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8ENN).getText());
    txtAlarmName.setWildcard(txtAlarmNameBuffer);
    txtAlarmName.resizeToCurrentText();
    txtAlarmName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z7NE));
    ctAlarm.add(txtAlarmName);

    txtAlarmValue.setXY(93, 88);
    txtAlarmValue.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    txtAlarmValue.setLinespacing(0);
    Unicode::snprintf(txtAlarmValueBuffer, TXTALARMVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1EXV).getText());
    txtAlarmValue.setWildcard(txtAlarmValueBuffer);
    txtAlarmValue.resizeToCurrentText();
    txtAlarmValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DU6W));
    ctAlarm.add(txtAlarmValue);

    add(ctAlarm);
}

DRAGViewBase::~DRAGViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void DRAGViewBase::setupScreen()
{

}
