/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen4_screen/Screen4ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


Screen4ViewBase::Screen4ViewBase()
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    ctScreen4.setPosition(0, 0, 480, 272);

    bxBackground.setPosition(0, 0, 480, 272);
    bxBackground.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    bxBackground.setBorderColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    bxBackground.setBorderSize(10);
    ctScreen4.add(bxBackground);

    txtFps.setPosition(303, 44, 50, 13);
    txtFps.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtFps.setLinespacing(0);
    Unicode::snprintf(txtFpsBuffer, TXTFPS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9ALT).getText());
    txtFps.setWildcard(txtFpsBuffer);
    txtFps.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GUUC));
    ctScreen4.add(txtFps);

    ctChart.setPosition(15, 121, 450, 150);

    chart1.setScale(1);
    chart1.setPosition(0, 0, 450, 136);
    chart1.setGraphAreaMargin(10, 20, 10, 10);
    chart1.setGraphAreaPadding(0, 10, 0, 0);
    chart1.setGraphRangeY(0, 20);

    chart1MajorYAxisGrid.setScale(1);
    chart1MajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    chart1MajorYAxisGrid.setInterval(2);
    chart1MajorYAxisGrid.setLineWidth(1);
    chart1.addGraphElement(chart1MajorYAxisGrid);

    chart1MajorYAxisLabel.setScale(1);
    chart1MajorYAxisLabel.setInterval(2);
    chart1MajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_4D48));
    chart1MajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    chart1.addLeftElement(chart1MajorYAxisLabel);

    chart1Line1.setScale(1);
    chart1Line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 153, 0));
    chart1Line1.setPainter(chart1Line1Painter);
    chart1Line1.setLineWidth(2);
    chart1.addGraphElement(chart1Line1);
    ctChart.add(chart1);

    txtChart1.setPosition(25, 134, 100, 13);
    txtChart1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtChart1.setLinespacing(0);
    Unicode::snprintf(txtChart1Buffer, TXTCHART1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_38I4).getText());
    txtChart1.setWildcard(txtChart1Buffer);
    txtChart1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A8AF));
    ctChart.add(txtChart1);

    shChart1.setPosition(13, 136, 14, 15);
    shChart1.setOrigin(0.000f, 0.000f);
    shChart1.setScale(1.000f, 1.000f);
    shChart1.setAngle(0.000f);
    shChart1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 153, 0));
    shChart1.setPainter(shChart1Painter);
    const touchgfx::AbstractShape::ShapePoint<float> shChart1Points[4] = { { 0.000f, 0.000f }, { 10.000f, 0.000f }, { 10.000f, 10.000f }, { 0.000f, 10.000f } };
    shChart1.setShape(shChart1Points);
    ctChart.add(shChart1);

    chart2.setScale(1);
    chart2.setPosition(0, 0, 450, 136);
    chart2.setGraphAreaMargin(10, 20, 10, 10);
    chart2.setGraphAreaPadding(0, 10, 0, 0);
    chart2.setGraphRangeY(0, 20);

    chart2Line1.setScale(1);
    chart2Line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 0));
    chart2Line1.setPainter(chart2Line1Painter);
    chart2Line1.setLineWidth(2);
    chart2.addGraphElement(chart2Line1);
    ctChart.add(chart2);

    txtChart2.setPosition(135, 134, 100, 13);
    txtChart2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtChart2.setLinespacing(0);
    Unicode::snprintf(txtChart2Buffer, TXTCHART2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YPWG).getText());
    txtChart2.setWildcard(txtChart2Buffer);
    txtChart2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EL78));
    ctChart.add(txtChart2);

    shChart2.setPosition(120, 136, 14, 15);
    shChart2.setOrigin(0.000f, 0.000f);
    shChart2.setScale(1.000f, 1.000f);
    shChart2.setAngle(0.000f);
    shChart2Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 0));
    shChart2.setPainter(shChart2Painter);
    const touchgfx::AbstractShape::ShapePoint<float> shChart2Points[4] = { { 0.000f, 0.000f }, { 10.000f, 0.000f }, { 10.000f, 10.000f }, { 0.000f, 10.000f } };
    shChart2.setShape(shChart2Points);
    ctChart.add(shChart2);

    ctChartLines.setPosition(0, 0, 450, 136);

    lnChartLeft.setPosition(23, 0, 47, 136);
    lnChartLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnChartLeft.setPainter(lnChartLeftPainter);
    lnChartLeft.setStart(5, 5);
    lnChartLeft.setEnd(5, 130);
    lnChartLeft.setLineWidth(3);
    lnChartLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctChartLines.add(lnChartLeft);

    lnChartRight.setPosition(439, 0, 15, 136);
    lnChartRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnChartRight.setPainter(lnChartRightPainter);
    lnChartRight.setStart(5, 5);
    lnChartRight.setEnd(5, 130);
    lnChartRight.setLineWidth(3);
    lnChartRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctChartLines.add(lnChartRight);

    lnChartDown.setPosition(23, 125, 425, 15);
    lnChartDownPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnChartDown.setPainter(lnChartDownPainter);
    lnChartDown.setStart(5, 5);
    lnChartDown.setEnd(419, 5);
    lnChartDown.setLineWidth(3);
    lnChartDown.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctChartLines.add(lnChartDown);

    lnChartUp.setPosition(23, 0, 425, 15);
    lnChartUpPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnChartUp.setPainter(lnChartUpPainter);
    lnChartUp.setStart(5, 5);
    lnChartUp.setEnd(420, 5);
    lnChartUp.setLineWidth(3);
    lnChartUp.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctChartLines.add(lnChartUp);
    ctChart.add(ctChartLines);
    ctScreen4.add(ctChart);

    ctMap.setPosition(366, 68, 95, 45);

    bxMap.setPosition(3, 0, 90, 43);
    bxMap.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    ctMap.add(bxMap);

    lnMapDown.setPosition(-13, 36, 110, 15);
    lnMapDownPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnMapDown.setPainter(lnMapDownPainter);
    lnMapDown.setStart(17, 7);
    lnMapDown.setEnd(105, 7);
    lnMapDown.setLineWidth(4);
    lnMapDown.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctMap.add(lnMapDown);

    lnMapLeft.setPosition(-2, -3, 10, 50);
    lnMapLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnMapLeft.setPainter(lnMapLeftPainter);
    lnMapLeft.setStart(5, 5);
    lnMapLeft.setEnd(5, 46);
    lnMapLeft.setLineWidth(4);
    lnMapLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctMap.add(lnMapLeft);

    lnMapRight.setPosition(88, -3, 12, 51);
    lnMapRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnMapRight.setPainter(lnMapRightPainter);
    lnMapRight.setStart(5, 5);
    lnMapRight.setEnd(5, 46);
    lnMapRight.setLineWidth(4);
    lnMapRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctMap.add(lnMapRight);

    lnMapUpLeft.setPosition(0, -3, 42, 16);
    lnMapUpLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnMapUpLeft.setPainter(lnMapUpLeftPainter);
    lnMapUpLeft.setStart(4, 5);
    lnMapUpLeft.setEnd(29, 5);
    lnMapUpLeft.setLineWidth(4);
    lnMapUpLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctMap.add(lnMapUpLeft);

    lnMapUpRight.setPosition(61, -3, 42, 22);
    lnMapUpRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnMapUpRight.setPainter(lnMapUpRightPainter);
    lnMapUpRight.setStart(5, 5);
    lnMapUpRight.setEnd(32, 5);
    lnMapUpRight.setLineWidth(4);
    lnMapUpRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctMap.add(lnMapUpRight);

    txtMap.setPosition(2, 12, 91, 25);
    txtMap.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtMap.setLinespacing(0);
    Unicode::snprintf(txtMapBuffer, TXTMAP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ZCXI).getText());
    txtMap.setWildcard(txtMapBuffer);
    txtMap.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IK52));
    ctMap.add(txtMap);

    lblMap.setPosition(37, 1, 22, 13);
    lblMap.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lblMap.setLinespacing(0);
    lblMap.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2L7V));
    ctMap.add(lblMap);
    ctScreen4.add(ctMap);

    ctTwaterC.setPosition(366, 12, 95, 45);

    bxTwaterC.setPosition(3, 1, 90, 41);
    bxTwaterC.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    ctTwaterC.add(bxTwaterC);

    lnTwaterCDown.setPosition(-13, 36, 110, 15);
    lnTwaterCDownPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnTwaterCDown.setPainter(lnTwaterCDownPainter);
    lnTwaterCDown.setStart(17, 7);
    lnTwaterCDown.setEnd(105, 7);
    lnTwaterCDown.setLineWidth(4);
    lnTwaterCDown.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctTwaterC.add(lnTwaterCDown);

    lnTwaterCLeft.setPosition(-2, -3, 10, 50);
    lnTwaterCLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnTwaterCLeft.setPainter(lnTwaterCLeftPainter);
    lnTwaterCLeft.setStart(5, 5);
    lnTwaterCLeft.setEnd(5, 45);
    lnTwaterCLeft.setLineWidth(4);
    lnTwaterCLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctTwaterC.add(lnTwaterCLeft);

    lnTwaterCRight.setPosition(88, -3, 12, 51);
    lnTwaterCRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnTwaterCRight.setPainter(lnTwaterCRightPainter);
    lnTwaterCRight.setStart(5, 5);
    lnTwaterCRight.setEnd(5, 45);
    lnTwaterCRight.setLineWidth(4);
    lnTwaterCRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctTwaterC.add(lnTwaterCRight);

    lnTwaterCUpLeft.setPosition(0, -3, 42, 16);
    lnTwaterCUpLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnTwaterCUpLeft.setPainter(lnTwaterCUpLeftPainter);
    lnTwaterCUpLeft.setStart(4, 5);
    lnTwaterCUpLeft.setEnd(22, 5);
    lnTwaterCUpLeft.setLineWidth(4);
    lnTwaterCUpLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctTwaterC.add(lnTwaterCUpLeft);

    lnTwaterCUpRight.setPosition(61, -3, 42, 22);
    lnTwaterCUpRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnTwaterCUpRight.setPainter(lnTwaterCUpRightPainter);
    lnTwaterCUpRight.setStart(14, 5);
    lnTwaterCUpRight.setEnd(32, 5);
    lnTwaterCUpRight.setLineWidth(4);
    lnTwaterCUpRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctTwaterC.add(lnTwaterCUpRight);

    txtTwaterC.setPosition(3, 12, 91, 25);
    txtTwaterC.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtTwaterC.setLinespacing(0);
    Unicode::snprintf(txtTwaterCBuffer, TXTTWATERC_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_T9V5).getText());
    txtTwaterC.setWildcard(txtTwaterCBuffer);
    txtTwaterC.setTypedText(touchgfx::TypedText(T___SINGLEUSE_83H7));
    ctTwaterC.add(txtTwaterC);

    lblTwaterC.setPosition(28, 1, 41, 13);
    lblTwaterC.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lblTwaterC.setLinespacing(0);
    lblTwaterC.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0ZEW));
    ctTwaterC.add(lblTwaterC);
    ctScreen4.add(ctTwaterC);

    ctPoil.setPosition(23, 13, 95, 45);

    bxPoil.setPosition(3, 0, 90, 44);
    bxPoil.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    ctPoil.add(bxPoil);

    lnPoilDown.setPosition(-13, 36, 110, 15);
    lnPoilDownPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnPoilDown.setPainter(lnPoilDownPainter);
    lnPoilDown.setStart(17, 7);
    lnPoilDown.setEnd(106, 7);
    lnPoilDown.setLineWidth(4);
    lnPoilDown.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctPoil.add(lnPoilDown);

    lnPoilLeft.setPosition(-2, -3, 10, 50);
    lnPoilLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnPoilLeft.setPainter(lnPoilLeftPainter);
    lnPoilLeft.setStart(5, 5);
    lnPoilLeft.setEnd(5, 46);
    lnPoilLeft.setLineWidth(4);
    lnPoilLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctPoil.add(lnPoilLeft);

    lnPoilRight.setPosition(88, -3, 12, 51);
    lnPoilRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnPoilRight.setPainter(lnPoilRightPainter);
    lnPoilRight.setStart(5, 5);
    lnPoilRight.setEnd(5, 46);
    lnPoilRight.setLineWidth(4);
    lnPoilRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctPoil.add(lnPoilRight);

    lnPoilUpLeft.setPosition(0, -3, 42, 16);
    lnPoilUpLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnPoilUpLeft.setPainter(lnPoilUpLeftPainter);
    lnPoilUpLeft.setStart(3, 5);
    lnPoilUpLeft.setEnd(33, 5);
    lnPoilUpLeft.setLineWidth(4);
    lnPoilUpLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctPoil.add(lnPoilUpLeft);

    lnPoilUpRight.setPosition(61, -3, 42, 22);
    lnPoilUpRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnPoilUpRight.setPainter(lnPoilUpRightPainter);
    lnPoilUpRight.setStart(3, 5);
    lnPoilUpRight.setEnd(32, 5);
    lnPoilUpRight.setLineWidth(4);
    lnPoilUpRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctPoil.add(lnPoilUpRight);

    txtPoil.setPosition(3, 12, 91, 25);
    txtPoil.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtPoil.setLinespacing(0);
    Unicode::snprintf(txtPoilBuffer, TXTPOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_P92Z).getText());
    txtPoil.setWildcard(txtPoilBuffer);
    txtPoil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2MYS));
    ctPoil.add(txtPoil);

    lblPoil.setPosition(40, 1, 18, 13);
    lblPoil.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lblPoil.setLinespacing(0);
    lblPoil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3M4D));
    ctPoil.add(lblPoil);
    ctScreen4.add(ctPoil);

    ctToil.setPosition(193, 12, 95, 45);

    bxToil.setPosition(3, 1, 90, 43);
    bxToil.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    ctToil.add(bxToil);

    lnToilDown.setPosition(-13, 36, 110, 15);
    lnToilDownPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnToilDown.setPainter(lnToilDownPainter);
    lnToilDown.setStart(17, 7);
    lnToilDown.setEnd(106, 7);
    lnToilDown.setLineWidth(4);
    lnToilDown.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctToil.add(lnToilDown);

    lnToilLeft.setPosition(-2, -3, 10, 50);
    lnToilLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnToilLeft.setPainter(lnToilLeftPainter);
    lnToilLeft.setStart(5, 6);
    lnToilLeft.setEnd(5, 46);
    lnToilLeft.setLineWidth(4);
    lnToilLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctToil.add(lnToilLeft);

    lnToilRight.setPosition(88, -3, 12, 51);
    lnToilRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnToilRight.setPainter(lnToilRightPainter);
    lnToilRight.setStart(5, 6);
    lnToilRight.setEnd(5, 46);
    lnToilRight.setLineWidth(4);
    lnToilRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctToil.add(lnToilRight);

    lnToilUpLeft.setPosition(0, -2, 42, 16);
    lnToilUpLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnToilUpLeft.setPainter(lnToilUpLeftPainter);
    lnToilUpLeft.setStart(3, 5);
    lnToilUpLeft.setEnd(33, 5);
    lnToilUpLeft.setLineWidth(4);
    lnToilUpLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctToil.add(lnToilUpLeft);

    lnToilUpRight.setPosition(53, -2, 46, 22);
    lnToilUpRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnToilUpRight.setPainter(lnToilUpRightPainter);
    lnToilUpRight.setStart(10, 5);
    lnToilUpRight.setEnd(40, 5);
    lnToilUpRight.setLineWidth(4);
    lnToilUpRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctToil.add(lnToilUpRight);

    txtToil.setPosition(3, 12, 91, 25);
    txtToil.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtToil.setLinespacing(0);
    Unicode::snprintf(txtToilBuffer, TXTTOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LXZD).getText());
    txtToil.setWildcard(txtToilBuffer);
    txtToil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HY3B));
    ctToil.add(txtToil);

    lblToil.setXY(40, 2);
    lblToil.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lblToil.setLinespacing(0);
    lblToil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KIMZ));
    ctToil.add(lblToil);
    ctScreen4.add(ctToil);

    ctIgnitionTiming.setPosition(23, 69, 95, 45);

    bxIgnitionTiming.setPosition(3, 1, 90, 43);
    bxIgnitionTiming.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    ctIgnitionTiming.add(bxIgnitionTiming);

    lnIgnitionTimingDown.setPosition(-13, 36, 110, 15);
    lnIgnitionTimingDownPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnIgnitionTimingDown.setPainter(lnIgnitionTimingDownPainter);
    lnIgnitionTimingDown.setStart(17, 7);
    lnIgnitionTimingDown.setEnd(106, 7);
    lnIgnitionTimingDown.setLineWidth(4);
    lnIgnitionTimingDown.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctIgnitionTiming.add(lnIgnitionTimingDown);

    lnIgnitionTimingLeft.setPosition(-2, -3, 10, 50);
    lnIgnitionTimingLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnIgnitionTimingLeft.setPainter(lnIgnitionTimingLeftPainter);
    lnIgnitionTimingLeft.setStart(5, 6);
    lnIgnitionTimingLeft.setEnd(5, 46);
    lnIgnitionTimingLeft.setLineWidth(4);
    lnIgnitionTimingLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctIgnitionTiming.add(lnIgnitionTimingLeft);

    lnIgnitionTimingRight.setPosition(88, -3, 12, 51);
    lnIgnitionTimingRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnIgnitionTimingRight.setPainter(lnIgnitionTimingRightPainter);
    lnIgnitionTimingRight.setStart(5, 6);
    lnIgnitionTimingRight.setEnd(5, 46);
    lnIgnitionTimingRight.setLineWidth(4);
    lnIgnitionTimingRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctIgnitionTiming.add(lnIgnitionTimingRight);

    lnIgnitionTimingUpLeft.setPosition(0, -2, 42, 16);
    lnIgnitionTimingUpLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnIgnitionTimingUpLeft.setPainter(lnIgnitionTimingUpLeftPainter);
    lnIgnitionTimingUpLeft.setStart(3, 5);
    lnIgnitionTimingUpLeft.setEnd(10, 5);
    lnIgnitionTimingUpLeft.setLineWidth(4);
    lnIgnitionTimingUpLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctIgnitionTiming.add(lnIgnitionTimingUpLeft);

    lnIgnitionTimingUpRight.setPosition(53, -2, 46, 22);
    lnIgnitionTimingUpRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnIgnitionTimingUpRight.setPainter(lnIgnitionTimingUpRightPainter);
    lnIgnitionTimingUpRight.setStart(32, 5);
    lnIgnitionTimingUpRight.setEnd(40, 5);
    lnIgnitionTimingUpRight.setLineWidth(4);
    lnIgnitionTimingUpRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctIgnitionTiming.add(lnIgnitionTimingUpRight);

    txtIgnitionTiming.setPosition(3, 12, 91, 25);
    txtIgnitionTiming.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtIgnitionTiming.setLinespacing(0);
    Unicode::snprintf(txtIgnitionTimingBuffer, TXTIGNITIONTIMING_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_R8HT).getText());
    txtIgnitionTiming.setWildcard(txtIgnitionTimingBuffer);
    txtIgnitionTiming.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SKF4));
    ctIgnitionTiming.add(txtIgnitionTiming);

    lblIgnitionTiming.setPosition(9, 2, 76, 13);
    lblIgnitionTiming.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lblIgnitionTiming.setLinespacing(0);
    lblIgnitionTiming.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FI9N));
    ctIgnitionTiming.add(lblIgnitionTiming);
    ctScreen4.add(ctIgnitionTiming);

    ctGear.setPosition(116, 12, 79, 68);

    txtGear.setPosition(-11, -15, 106, 92);
    txtGear.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtGear.setLinespacing(0);
    Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TH2W).getText());
    txtGear.setWildcard(txtGearBuffer);
    txtGear.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OE23));
    ctGear.add(txtGear);
    ctScreen4.add(ctGear);

    ctCVStatus.setPosition(289, 11, 76, 37);

    txtCVStatus.setPosition(0, 0, 77, 37);
    txtCVStatus.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtCVStatus.setLinespacing(0);
    Unicode::snprintf(txtCVStatusBuffer, TXTCVSTATUS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VRJ6).getText());
    txtCVStatus.setWildcard(txtCVStatusBuffer);
    txtCVStatus.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8D05));
    ctCVStatus.add(txtCVStatus);
    ctScreen4.add(ctCVStatus);

    ctEmSpeed.setPosition(136, 69, 95, 45);

    bxEmSpeed.setPosition(3, 1, 90, 43);
    bxEmSpeed.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    ctEmSpeed.add(bxEmSpeed);

    lnEmSpeedDown.setPosition(-13, 36, 110, 15);
    lnEmSpeedDownPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnEmSpeedDown.setPainter(lnEmSpeedDownPainter);
    lnEmSpeedDown.setStart(17, 7);
    lnEmSpeedDown.setEnd(106, 7);
    lnEmSpeedDown.setLineWidth(4);
    lnEmSpeedDown.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctEmSpeed.add(lnEmSpeedDown);

    lnEmSpeedLeft.setPosition(-2, -3, 10, 50);
    lnEmSpeedLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnEmSpeedLeft.setPainter(lnEmSpeedLeftPainter);
    lnEmSpeedLeft.setStart(5, 6);
    lnEmSpeedLeft.setEnd(5, 46);
    lnEmSpeedLeft.setLineWidth(4);
    lnEmSpeedLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctEmSpeed.add(lnEmSpeedLeft);

    lnEmSpeedRight.setPosition(88, -3, 12, 51);
    lnEmSpeedRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnEmSpeedRight.setPainter(lnEmSpeedRightPainter);
    lnEmSpeedRight.setStart(5, 6);
    lnEmSpeedRight.setEnd(5, 46);
    lnEmSpeedRight.setLineWidth(4);
    lnEmSpeedRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctEmSpeed.add(lnEmSpeedRight);

    lnEmSpeedUpLeft.setPosition(0, -2, 42, 16);
    lnEmSpeedUpLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnEmSpeedUpLeft.setPainter(lnEmSpeedUpLeftPainter);
    lnEmSpeedUpLeft.setStart(3, 5);
    lnEmSpeedUpLeft.setEnd(21, 5);
    lnEmSpeedUpLeft.setLineWidth(4);
    lnEmSpeedUpLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctEmSpeed.add(lnEmSpeedUpLeft);

    lnEmSpeedUpRight.setPosition(53, -2, 46, 22);
    lnEmSpeedUpRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnEmSpeedUpRight.setPainter(lnEmSpeedUpRightPainter);
    lnEmSpeedUpRight.setStart(21, 5);
    lnEmSpeedUpRight.setEnd(40, 5);
    lnEmSpeedUpRight.setLineWidth(4);
    lnEmSpeedUpRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctEmSpeed.add(lnEmSpeedUpRight);

    txtEmSpeed.setPosition(3, 12, 91, 25);
    txtEmSpeed.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtEmSpeed.setLinespacing(0);
    Unicode::snprintf(txtEmSpeedBuffer, TXTEMSPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TL8L).getText());
    txtEmSpeed.setWildcard(txtEmSpeedBuffer);
    txtEmSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JEIS));
    ctEmSpeed.add(txtEmSpeed);

    lblEmSpeed.setXY(24, 2);
    lblEmSpeed.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lblEmSpeed.setLinespacing(0);
    lblEmSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8MZT));
    ctEmSpeed.add(lblEmSpeed);
    ctScreen4.add(ctEmSpeed);

    ctEmTorque.setPosition(249, 69, 95, 45);

    bxEmTorque.setPosition(3, 1, 90, 43);
    bxEmTorque.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    ctEmTorque.add(bxEmTorque);

    lnEmTorqueDown.setPosition(-13, 36, 110, 15);
    lnEmTorqueDownPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnEmTorqueDown.setPainter(lnEmTorqueDownPainter);
    lnEmTorqueDown.setStart(17, 7);
    lnEmTorqueDown.setEnd(106, 7);
    lnEmTorqueDown.setLineWidth(4);
    lnEmTorqueDown.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctEmTorque.add(lnEmTorqueDown);

    lnEmTorqueLeft.setPosition(-2, -3, 10, 50);
    lnEmTorqueLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnEmTorqueLeft.setPainter(lnEmTorqueLeftPainter);
    lnEmTorqueLeft.setStart(5, 6);
    lnEmTorqueLeft.setEnd(5, 46);
    lnEmTorqueLeft.setLineWidth(4);
    lnEmTorqueLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctEmTorque.add(lnEmTorqueLeft);

    lnEmTorqueRight.setPosition(88, -3, 12, 51);
    lnEmTorqueRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnEmTorqueRight.setPainter(lnEmTorqueRightPainter);
    lnEmTorqueRight.setStart(5, 6);
    lnEmTorqueRight.setEnd(5, 46);
    lnEmTorqueRight.setLineWidth(4);
    lnEmTorqueRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctEmTorque.add(lnEmTorqueRight);

    lnEmTorqueUpLeft.setPosition(0, -2, 42, 16);
    lnEmTorqueUpLeftPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnEmTorqueUpLeft.setPainter(lnEmTorqueUpLeftPainter);
    lnEmTorqueUpLeft.setStart(3, 5);
    lnEmTorqueUpLeft.setEnd(20, 5);
    lnEmTorqueUpLeft.setLineWidth(4);
    lnEmTorqueUpLeft.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctEmTorque.add(lnEmTorqueUpLeft);

    lnEmTorqueUpRight.setPosition(53, -2, 46, 22);
    lnEmTorqueUpRightPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lnEmTorqueUpRight.setPainter(lnEmTorqueUpRightPainter);
    lnEmTorqueUpRight.setStart(21, 5);
    lnEmTorqueUpRight.setEnd(40, 5);
    lnEmTorqueUpRight.setLineWidth(4);
    lnEmTorqueUpRight.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    ctEmTorque.add(lnEmTorqueUpRight);

    txtEmTorque.setPosition(3, 12, 91, 25);
    txtEmTorque.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtEmTorque.setLinespacing(0);
    Unicode::snprintf(txtEmTorqueBuffer, TXTEMTORQUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_37K3).getText());
    txtEmTorque.setWildcard(txtEmTorqueBuffer);
    txtEmTorque.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WFFK));
    ctEmTorque.add(txtEmTorque);

    lblEmTorque.setXY(22, 2);
    lblEmTorque.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lblEmTorque.setLinespacing(0);
    lblEmTorque.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QU0Q));
    ctEmTorque.add(lblEmTorque);
    ctScreen4.add(ctEmTorque);

    ctScreenName.setPosition(165, 91, 150, 100);

    bxScreenName.setPosition(0, 0, 150, 100);
    bxScreenName.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    bxScreenName.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 255));
    bxScreenName.setBorderSize(5);
    ctScreenName.add(bxScreenName);

    txtScreenName.setPosition(40, 25, 70, 50);
    txtScreenName.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    txtScreenName.setLinespacing(0);
    txtScreenName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7THQ));
    ctScreenName.add(txtScreenName);

    ctMessage.setPosition(0, 0, 480, 272);
    ctMessage.setVisible(false);

    bxMessage.setPosition(90, 61, 300, 150);
    bxMessage.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    bxMessage.setBorderColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    bxMessage.setBorderSize(5);
    ctMessage.add(bxMessage);

    txtMessage.setPosition(95, 61, 290, 150);
    txtMessage.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    txtMessage.setLinespacing(0);
    Unicode::snprintf(txtMessageBuffer, TXTMESSAGE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_GS2B).getText());
    txtMessage.setWildcard(txtMessageBuffer);
    txtMessage.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CAJ9));
    ctMessage.add(txtMessage);

    ctAlarm.setPosition(11, 11, 460, 250);
    ctAlarm.setVisible(false);

    bxAlarm.setPosition(0, 0, 460, 250);
    bxAlarm.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    bxAlarm.setBorderColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    bxAlarm.setBorderSize(8);
    ctAlarm.add(bxAlarm);

    txtAlarm.setPosition(5, 5, 450, 240);
    txtAlarm.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    txtAlarm.setLinespacing(0);
    Unicode::snprintf(txtAlarmBuffer, TXTALARM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LWFV).getText());
    txtAlarm.setWildcard(txtAlarmBuffer);
    txtAlarm.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S6LA));
    ctAlarm.add(txtAlarm);

    add(__background);
    add(ctScreen4);
    add(ctScreenName);
    add(ctMessage);
    add(ctAlarm);
}

void Screen4ViewBase::setupScreen()
{

}
